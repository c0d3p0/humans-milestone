[gd_scene load_steps=4 format=2]

[ext_resource path="res://material/wall/concrete_white/concrete_white_wall_6x4.tres" type="Material" id=1]

[sub_resource type="ConcavePolygonShape" id=1]
data = PoolVector3Array( -3, 2, 0.5, -2, 2, 0.5, -3, 1.2, 0.5, -2, 2, 0.5, -2, 1.2, 0.5, -3, 1.2, 0.5, 3, 2, -0.5, 2, 2, -0.5, 3, 1.2, -0.5, 2, 2, -0.5, 2, 1.2, -0.5, 3, 1.2, -0.5, -2, 2, 0.5, -1, 2, 0.5, -2, 1.2, 0.5, -1, 2, 0.5, -1, 1.2, 0.5, -2, 1.2, 0.5, 2, 2, -0.5, 1, 2, -0.5, 2, 1.2, -0.5, 1, 2, -0.5, 1, 1.2, -0.5, 2, 1.2, -0.5, -1, 2, 0.5, 0, 2, 0.5, -1, 1.2, 0.5, 0, 2, 0.5, 0, 1.2, 0.5, -1, 1.2, 0.5, 1, 2, -0.5, 0, 2, -0.5, 1, 1.2, -0.5, 0, 2, -0.5, 0, 1.2, -0.5, 1, 1.2, -0.5, 0, 2, 0.5, 1, 2, 0.5, 0, 1.2, 0.5, 1, 2, 0.5, 1, 1.2, 0.5, 0, 1.2, 0.5, 0, 2, -0.5, -1, 2, -0.5, 0, 1.2, -0.5, -1, 2, -0.5, -1, 1.2, -0.5, 0, 1.2, -0.5, 1, 2, 0.5, 2, 2, 0.5, 1, 1.2, 0.5, 2, 2, 0.5, 2, 1.2, 0.5, 1, 1.2, 0.5, -1, 2, -0.5, -2, 2, -0.5, -1, 1.2, -0.5, -2, 2, -0.5, -2, 1.2, -0.5, -1, 1.2, -0.5, 2, 2, 0.5, 3, 2, 0.5, 2, 1.2, 0.5, 3, 2, 0.5, 3, 1.2, 0.5, 2, 1.2, 0.5, -2, 2, -0.5, -3, 2, -0.5, -2, 1.2, -0.5, -3, 2, -0.5, -3, 1.2, -0.5, -2, 1.2, -0.5, -3, 1.2, 0.5, -2, 1.2, 0.5, -3, 0.4, 0.5, -2, 1.2, 0.5, -2, 0.4, 0.5, -3, 0.4, 0.5, 3, 1.2, -0.5, 2, 1.2, -0.5, 3, 0.4, -0.5, 2, 1.2, -0.5, 2, 0.4, -0.5, 3, 0.4, -0.5, -2, 1.2, 0.5, -1, 1.2, 0.5, -2, 0.4, 0.5, -1, 1.2, 0.5, -1, 0.4, 0.5, -2, 0.4, 0.5, 2, 1.2, -0.5, 1, 1.2, -0.5, 2, 0.4, -0.5, 1, 1.2, -0.5, 1, 0.4, -0.5, 2, 0.4, -0.5, -1, 1.2, 0.5, 0, 1.2, 0.5, -1, 0.4, 0.5, 0, 1.2, 0.5, 0, 0.4, 0.5, -1, 0.4, 0.5, 1, 1.2, -0.5, 0, 1.2, -0.5, 1, 0.4, -0.5, 0, 1.2, -0.5, 0, 0.4, -0.5, 1, 0.4, -0.5, 0, 1.2, 0.5, 1, 1.2, 0.5, 0, 0.4, 0.5, 1, 1.2, 0.5, 1, 0.4, 0.5, 0, 0.4, 0.5, 0, 1.2, -0.5, -1, 1.2, -0.5, 0, 0.4, -0.5, -1, 1.2, -0.5, -1, 0.4, -0.5, 0, 0.4, -0.5, 1, 1.2, 0.5, 2, 1.2, 0.5, 1, 0.4, 0.5, 2, 1.2, 0.5, 2, 0.4, 0.5, 1, 0.4, 0.5, -1, 1.2, -0.5, -2, 1.2, -0.5, -1, 0.4, -0.5, -2, 1.2, -0.5, -2, 0.4, -0.5, -1, 0.4, -0.5, 2, 1.2, 0.5, 3, 1.2, 0.5, 2, 0.4, 0.5, 3, 1.2, 0.5, 3, 0.4, 0.5, 2, 0.4, 0.5, -2, 1.2, -0.5, -3, 1.2, -0.5, -2, 0.4, -0.5, -3, 1.2, -0.5, -3, 0.4, -0.5, -2, 0.4, -0.5, -3, 0.4, 0.5, -2, 0.4, 0.5, -3, -0.4, 0.5, -2, 0.4, 0.5, -2, -0.4, 0.5, -3, -0.4, 0.5, 3, 0.4, -0.5, 2, 0.4, -0.5, 3, -0.4, -0.5, 2, 0.4, -0.5, 2, -0.4, -0.5, 3, -0.4, -0.5, -2, 0.4, 0.5, -1, 0.4, 0.5, -2, -0.4, 0.5, -1, 0.4, 0.5, -1, -0.4, 0.5, -2, -0.4, 0.5, 2, 0.4, -0.5, 1, 0.4, -0.5, 2, -0.4, -0.5, 1, 0.4, -0.5, 1, -0.4, -0.5, 2, -0.4, -0.5, -1, 0.4, 0.5, 0, 0.4, 0.5, -1, -0.4, 0.5, 0, 0.4, 0.5, 0, -0.4, 0.5, -1, -0.4, 0.5, 1, 0.4, -0.5, 0, 0.4, -0.5, 1, -0.4, -0.5, 0, 0.4, -0.5, 0, -0.4, -0.5, 1, -0.4, -0.5, 0, 0.4, 0.5, 1, 0.4, 0.5, 0, -0.4, 0.5, 1, 0.4, 0.5, 1, -0.4, 0.5, 0, -0.4, 0.5, 0, 0.4, -0.5, -1, 0.4, -0.5, 0, -0.4, -0.5, -1, 0.4, -0.5, -1, -0.4, -0.5, 0, -0.4, -0.5, 1, 0.4, 0.5, 2, 0.4, 0.5, 1, -0.4, 0.5, 2, 0.4, 0.5, 2, -0.4, 0.5, 1, -0.4, 0.5, -1, 0.4, -0.5, -2, 0.4, -0.5, -1, -0.4, -0.5, -2, 0.4, -0.5, -2, -0.4, -0.5, -1, -0.4, -0.5, 2, 0.4, 0.5, 3, 0.4, 0.5, 2, -0.4, 0.5, 3, 0.4, 0.5, 3, -0.4, 0.5, 2, -0.4, 0.5, -2, 0.4, -0.5, -3, 0.4, -0.5, -2, -0.4, -0.5, -3, 0.4, -0.5, -3, -0.4, -0.5, -2, -0.4, -0.5, -3, -0.4, 0.5, -2, -0.4, 0.5, -3, -1.2, 0.5, -2, -0.4, 0.5, -2, -1.2, 0.5, -3, -1.2, 0.5, 3, -0.4, -0.5, 2, -0.4, -0.5, 3, -1.2, -0.5, 2, -0.4, -0.5, 2, -1.2, -0.5, 3, -1.2, -0.5, -2, -0.4, 0.5, -1, -0.4, 0.5, -2, -1.2, 0.5, -1, -0.4, 0.5, -1, -1.2, 0.5, -2, -1.2, 0.5, 2, -0.4, -0.5, 1, -0.4, -0.5, 2, -1.2, -0.5, 1, -0.4, -0.5, 1, -1.2, -0.5, 2, -1.2, -0.5, -1, -0.4, 0.5, 0, -0.4, 0.5, -1, -1.2, 0.5, 0, -0.4, 0.5, 0, -1.2, 0.5, -1, -1.2, 0.5, 1, -0.4, -0.5, 0, -0.4, -0.5, 1, -1.2, -0.5, 0, -0.4, -0.5, 0, -1.2, -0.5, 1, -1.2, -0.5, 0, -0.4, 0.5, 1, -0.4, 0.5, 0, -1.2, 0.5, 1, -0.4, 0.5, 1, -1.2, 0.5, 0, -1.2, 0.5, 0, -0.4, -0.5, -1, -0.4, -0.5, 0, -1.2, -0.5, -1, -0.4, -0.5, -1, -1.2, -0.5, 0, -1.2, -0.5, 1, -0.4, 0.5, 2, -0.4, 0.5, 1, -1.2, 0.5, 2, -0.4, 0.5, 2, -1.2, 0.5, 1, -1.2, 0.5, -1, -0.4, -0.5, -2, -0.4, -0.5, -1, -1.2, -0.5, -2, -0.4, -0.5, -2, -1.2, -0.5, -1, -1.2, -0.5, 2, -0.4, 0.5, 3, -0.4, 0.5, 2, -1.2, 0.5, 3, -0.4, 0.5, 3, -1.2, 0.5, 2, -1.2, 0.5, -2, -0.4, -0.5, -3, -0.4, -0.5, -2, -1.2, -0.5, -3, -0.4, -0.5, -3, -1.2, -0.5, -2, -1.2, -0.5, -3, -1.2, 0.5, -2, -1.2, 0.5, -3, -2, 0.5, -2, -1.2, 0.5, -2, -2, 0.5, -3, -2, 0.5, 3, -1.2, -0.5, 2, -1.2, -0.5, 3, -2, -0.5, 2, -1.2, -0.5, 2, -2, -0.5, 3, -2, -0.5, -2, -1.2, 0.5, -1, -1.2, 0.5, -2, -2, 0.5, -1, -1.2, 0.5, -1, -2, 0.5, -2, -2, 0.5, 2, -1.2, -0.5, 1, -1.2, -0.5, 2, -2, -0.5, 1, -1.2, -0.5, 1, -2, -0.5, 2, -2, -0.5, -1, -1.2, 0.5, 0, -1.2, 0.5, -1, -2, 0.5, 0, -1.2, 0.5, 0, -2, 0.5, -1, -2, 0.5, 1, -1.2, -0.5, 0, -1.2, -0.5, 1, -2, -0.5, 0, -1.2, -0.5, 0, -2, -0.5, 1, -2, -0.5, 0, -1.2, 0.5, 1, -1.2, 0.5, 0, -2, 0.5, 1, -1.2, 0.5, 1, -2, 0.5, 0, -2, 0.5, 0, -1.2, -0.5, -1, -1.2, -0.5, 0, -2, -0.5, -1, -1.2, -0.5, -1, -2, -0.5, 0, -2, -0.5, 1, -1.2, 0.5, 2, -1.2, 0.5, 1, -2, 0.5, 2, -1.2, 0.5, 2, -2, 0.5, 1, -2, 0.5, -1, -1.2, -0.5, -2, -1.2, -0.5, -1, -2, -0.5, -2, -1.2, -0.5, -2, -2, -0.5, -1, -2, -0.5, 2, -1.2, 0.5, 3, -1.2, 0.5, 2, -2, 0.5, 3, -1.2, 0.5, 3, -2, 0.5, 2, -2, 0.5, -2, -1.2, -0.5, -3, -1.2, -0.5, -2, -2, -0.5, -3, -1.2, -0.5, -3, -2, -0.5, -2, -2, -0.5, 3, 2, 0.5, 3, 2, -0.5, 3, 1.2, 0.5, 3, 2, -0.5, 3, 1.2, -0.5, 3, 1.2, 0.5, -3, 2, -0.5, -3, 2, 0.5, -3, 1.2, -0.5, -3, 2, 0.5, -3, 1.2, 0.5, -3, 1.2, -0.5, 3, 1.2, 0.5, 3, 1.2, -0.5, 3, 0.4, 0.5, 3, 1.2, -0.5, 3, 0.4, -0.5, 3, 0.4, 0.5, -3, 1.2, -0.5, -3, 1.2, 0.5, -3, 0.4, -0.5, -3, 1.2, 0.5, -3, 0.4, 0.5, -3, 0.4, -0.5, 3, 0.4, 0.5, 3, 0.4, -0.5, 3, -0.4, 0.5, 3, 0.4, -0.5, 3, -0.4, -0.5, 3, -0.4, 0.5, -3, 0.4, -0.5, -3, 0.4, 0.5, -3, -0.4, -0.5, -3, 0.4, 0.5, -3, -0.4, 0.5, -3, -0.4, -0.5, 3, -0.4, 0.5, 3, -0.4, -0.5, 3, -1.2, 0.5, 3, -0.4, -0.5, 3, -1.2, -0.5, 3, -1.2, 0.5, -3, -0.4, -0.5, -3, -0.4, 0.5, -3, -1.2, -0.5, -3, -0.4, 0.5, -3, -1.2, 0.5, -3, -1.2, -0.5, 3, -1.2, 0.5, 3, -1.2, -0.5, 3, -2, 0.5, 3, -1.2, -0.5, 3, -2, -0.5, 3, -2, 0.5, -3, -1.2, -0.5, -3, -1.2, 0.5, -3, -2, -0.5, -3, -1.2, 0.5, -3, -2, 0.5, -3, -2, -0.5, 3, 2, 0.5, 2, 2, 0.5, 3, 2, -0.5, 2, 2, 0.5, 2, 2, -0.5, 3, 2, -0.5, -3, -2, 0.5, -2, -2, 0.5, -3, -2, -0.5, -2, -2, 0.5, -2, -2, -0.5, -3, -2, -0.5, 2, 2, 0.5, 1, 2, 0.5, 2, 2, -0.5, 1, 2, 0.5, 1, 2, -0.5, 2, 2, -0.5, -2, -2, 0.5, -1, -2, 0.5, -2, -2, -0.5, -1, -2, 0.5, -1, -2, -0.5, -2, -2, -0.5, 1, 2, 0.5, 0, 2, 0.5, 1, 2, -0.5, 0, 2, 0.5, 0, 2, -0.5, 1, 2, -0.5, -1, -2, 0.5, 0, -2, 0.5, -1, -2, -0.5, 0, -2, 0.5, 0, -2, -0.5, -1, -2, -0.5, 0, 2, 0.5, -1, 2, 0.5, 0, 2, -0.5, -1, 2, 0.5, -1, 2, -0.5, 0, 2, -0.5, 0, -2, 0.5, 1, -2, 0.5, 0, -2, -0.5, 1, -2, 0.5, 1, -2, -0.5, 0, -2, -0.5, -1, 2, 0.5, -2, 2, 0.5, -1, 2, -0.5, -2, 2, 0.5, -2, 2, -0.5, -1, 2, -0.5, 1, -2, 0.5, 2, -2, 0.5, 1, -2, -0.5, 2, -2, 0.5, 2, -2, -0.5, 1, -2, -0.5, -2, 2, 0.5, -3, 2, 0.5, -2, 2, -0.5, -3, 2, 0.5, -3, 2, -0.5, -2, 2, -0.5, 2, -2, 0.5, 3, -2, 0.5, 2, -2, -0.5, 3, -2, 0.5, 3, -2, -0.5, 2, -2, -0.5 )

[sub_resource type="CubeMesh" id=2]
size = Vector3( 6, 4, 1 )

[node name="ConcreteWall6x4" type="StaticBody"]
collision_layer = 32
collision_mask = 495

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 2 )
material/0 = ExtResource( 1 )
